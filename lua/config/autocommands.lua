local colors_util = require("config.colors")

vim.api.nvim_create_autocmd("ColorScheme", {
	pattern = "*",
	callback = function()
		colors_util.load()
		local colors = colors_util.colors

		local highlights = {
			AerialKey = { fg = colors.keyword },
			AerialEnum = { fg = colors.type },
			AerialFile = { fg = colors.module },
			AerialNull = { fg = colors.none },
			AerialArray = { fg = colors.markup_list },
			AerialClass = { fg = colors.type },
			AerialEvent = { fg = colors.none },
			AerialField = { fg = colors.property },
			AerialGuide = { fg = colors.none },
			AerialGuide1 = { fg = colors.none },
			AerialGuide2 = { fg = colors.none },
			AerialGuide3 = { fg = colors.none },
			AerialGuide4 = { fg = colors.none },
			AerialGuide5 = { fg = colors.none },
			AerialGuide6 = { fg = colors.none },
			AerialGuide7 = { fg = colors.none },
			AerialGuide8 = { fg = colors.none },
			AerialGuide9 = { fg = colors.none },
			AerialLineNC = { bg = colors.none },
			AerialMethod = { fg = colors.function_ },
			AerialModule = { fg = colors.module },
			AerialNormal = { fg = colors.none },
			AerialNumber = { fg = colors.number },
			AerialObject = { fg = colors.type },
			AerialString = { fg = colors.string },
			AerialStruct = { fg = colors.type },
			AerialBoolean = { fg = colors.boolean },
			AerialKeyIcon = { fg = colors.keyword },
			AerialPackage = { fg = colors.module },
			AerialPrivate = { fg = colors.none },
			AerialConstant = { fg = colors.constant },
			AerialEnumIcon = { fg = colors.type },
			AerialFileIcon = { fg = colors.module },
			AerialFunction = { fg = colors.function_ },
			AerialNullIcon = { fg = colors.none },
			AerialOperator = { fg = colors.operator },
			AerialProperty = { fg = colors.property },
			AerialVariable = { fg = colors.variable },
			AerialArrayIcon = { fg = colors.markup_list },
			AerialClassIcon = { fg = colors.type },
			AerialEventIcon = { fg = colors.none },
			AerialFieldIcon = { fg = colors.property },
			AerialInterface = { fg = colors.type },
			AerialNamespace = { fg = colors.none },
			AerialProtected = { fg = colors.none },
			AerialEnumMember = { fg = colors.none },
			AerialMethodIcon = { fg = colors.function_ },
			AerialModuleIcon = { fg = colors.module },
			AerialNumberIcon = { fg = colors.number },
			AerialObjectIcon = { fg = colors.type },
			AerialStringIcon = { fg = colors.string },
			AerialStructIcon = { fg = colors.type },
			AerialBooleanIcon = { fg = colors.boolean },
			AerialConstructor = { fg = colors.constructor },
			AerialNormalFloat = { fg = colors.none },
			AerialPackageIcon = { fg = colors.module },
			AerialConstantIcon = { fg = colors.constant },
			AerialFunctionIcon = { fg = colors.function_ },
			AerialOperatorIcon = { fg = colors.operator },
			AerialPropertyIcon = { fg = colors.property },
			AerialVariableIcon = { fg = colors.variable },
			AerialInterfaceIcon = { fg = colors.type },
			AerialNamespaceIcon = { fg = colors.none },
			AerialTypeParameter = { fg = colors.none },
			AerialEnumMemberIcon = { fg = colors.none },
			AerialConstructorIcon = { fg = colors.constructor },
			AerialTypeParameterIcon = { fg = colors.none },
			AerialAttribute = { fg = colors.attribute },
			Beacon = { bg = colors.cursor },
			MatchParen = { fg = colors.cursor, reverse = true },
			TreesitterContext = {
				italic = true,
				bg = colors.bg_float,
			},
			TreesitterContextLineNumber = {
				italic = true,
				bold = true,
				bg = colors.bg_float,
			},
			TreesitterContextBottom = {},
			TreesitterContextSeparator = {},
		}

		for group, style in pairs(highlights) do
			vim.api.nvim_set_hl(0, group, style)
		end
	end,
})
